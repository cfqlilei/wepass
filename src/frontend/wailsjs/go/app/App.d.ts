// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {models} from '../models';
import {version} from '../models';
import {services} from '../models';

export function ChangeLoginPassword(arg1:string,arg2:string):Promise<void>;

export function CheckAccessibilityPermission():Promise<boolean>;

export function CheckAndRepairCorruptedAccounts():Promise<Record<string, any>>;

export function CheckRecentVaultStatus():Promise<Record<string, any>>;

export function CheckVaultExists(arg1:string):Promise<boolean>;

export function ClearUsernameHistory():Promise<void>;

export function CloseVault():Promise<void>;

export function CopyAccountNotes(arg1:string):Promise<void>;

export function CopyAccountPassword(arg1:string):Promise<void>;

export function CopyAccountUsername(arg1:string):Promise<void>;

export function CopyAccountUsernameAndPassword(arg1:string):Promise<void>;

export function CreateAccount(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string,arg6:string,arg7:number):Promise<models.AccountDecrypted>;

export function CreateCustomPasswordRule(arg1:string,arg2:string,arg3:models.CustomRuleConfig):Promise<models.PasswordRule>;

export function CreateGeneralPasswordRule(arg1:string,arg2:string,arg3:models.GeneralRuleConfig):Promise<models.PasswordRule>;

export function CreateGroup(arg1:string):Promise<models.Group>;

export function CreateType(arg1:string,arg2:string,arg3:string):Promise<models.Type>;

export function CreateVault(arg1:string,arg2:string,arg3:string):Promise<string>;

export function DeleteAccount(arg1:string):Promise<void>;

export function DeleteGroup(arg1:string):Promise<void>;

export function DeletePasswordRule(arg1:string):Promise<void>;

export function DeleteType(arg1:string):Promise<void>;

export function ExportVault(arg1:string,arg2:string,arg3:string,arg4:Array<string>,arg5:Array<string>,arg6:Array<string>,arg7:boolean):Promise<void>;

export function ForceInitializeDefaultPasswordRules(arg1:boolean):Promise<void>;

export function GeneratePasswordByCustomConfig(arg1:models.CustomRuleConfig):Promise<string>;

export function GeneratePasswordByGeneralConfig(arg1:models.GeneralRuleConfig):Promise<string>;

export function GeneratePasswordByRule(arg1:string):Promise<string>;

export function GetAccountByID(arg1:string):Promise<models.AccountDecrypted>;

export function GetAccountCredentials(arg1:string):Promise<string>;

export function GetAccountDetail(arg1:string):Promise<models.AccountDecrypted>;

export function GetAccountNotes(arg1:string):Promise<string>;

export function GetAccountPassword(arg1:string):Promise<string>;

export function GetAccountRaw(arg1:string):Promise<models.Account>;

export function GetAccountsByConditions(arg1:string):Promise<Array<models.AccountDecrypted>>;

export function GetAccountsByGroup(arg1:string):Promise<Array<models.AccountDecrypted>>;

export function GetAccountsByTab(arg1:string):Promise<Array<models.AccountDecrypted>>;

export function GetAllAccounts():Promise<Array<models.AccountDecrypted>>;

export function GetAllPasswordRules():Promise<Array<models.PasswordRule>>;

export function GetAllTypes():Promise<Array<models.Type>>;

export function GetAppConfig():Promise<models.AppConfig>;

export function GetAppInfo():Promise<Record<string, any>>;

export function GetChangeLog():Promise<Array<version.ChangeLogEntry>>;

export function GetCurrentPassword():Promise<string>;

export function GetCurrentVaultPath():Promise<string>;

export function GetDefaultPasswordRule():Promise<models.PasswordRule>;

export function GetGroups():Promise<Array<models.Group>>;

export function GetHotkeyConfig():Promise<models.HotkeyConfig>;

export function GetLastWindowInfo():Promise<Record<string, any>>;

export function GetLockConfig():Promise<models.LockConfig>;

export function GetLogConfig():Promise<models.LogConfig>;

export function GetPasswordRuleByID(arg1:string):Promise<models.PasswordRule>;

export function GetPreviousFocusedAppName():Promise<string>;

export function GetRecentVaults():Promise<Array<string>>;

export function GetTimerStatus():Promise<Record<string, any>>;

export function GetTypesByGroup(arg1:string):Promise<Array<models.Type>>;

export function GetUsageDays():Promise<number>;

export function GetUsernameHistory(arg1:string):Promise<Array<string>>;

export function HideWindow():Promise<void>;

export function ImportVault(arg1:string,arg2:string):Promise<services.ImportResult>;

export function InsertTypeAfter(arg1:string,arg2:string,arg3:string,arg4:string):Promise<models.Type>;

export function IsLockTriggered():Promise<boolean>;

export function IsVaultOpened():Promise<boolean>;

export function IsWindowVisible():Promise<boolean>;

export function MoveGroupLeft(arg1:string):Promise<void>;

export function MoveGroupRight(arg1:string):Promise<void>;

export function MoveTypeDown(arg1:string):Promise<void>;

export function MoveTypeUp(arg1:string):Promise<void>;

export function OnWindowBlur():Promise<void>;

export function OnWindowFocus():Promise<void>;

export function OnWindowMinimize():Promise<void>;

export function OpenVault(arg1:string,arg2:string):Promise<void>;

export function OpenVaultDirectory():Promise<void>;

export function RecordLastWindow():Promise<void>;

export function RenameGroup(arg1:string,arg2:string):Promise<void>;

export function SaveUsernameToHistory(arg1:string,arg2:string):Promise<void>;

export function SearchAccounts(arg1:string):Promise<Array<models.AccountDecrypted>>;

export function SelectExportPath():Promise<string>;

export function SelectImportFile():Promise<string>;

export function SelectVaultFile():Promise<string>;

export function SetAppConfig(arg1:Record<string, any>):Promise<void>;

export function SetHotkeyConfig(arg1:models.HotkeyConfig):Promise<void>;

export function SetLockConfig(arg1:models.LockConfig):Promise<void>;

export function SetLogConfig(arg1:models.LogConfig):Promise<void>;

export function SetPasswordRuleAsDefault(arg1:string,arg2:boolean):Promise<void>;

export function ShowWindow():Promise<void>;

export function SimulatePassword(arg1:string):Promise<void>;

export function SimulateUsername(arg1:string):Promise<void>;

export function SimulateUsernameAndPassword(arg1:string):Promise<void>;

export function StorePreviousFocusedApp():Promise<void>;

export function SwitchToLastWindow():Promise<boolean>;

export function SwitchToPasswordManager():Promise<boolean>;

export function TestToggleWindow():Promise<void>;

export function ToggleWindow():Promise<void>;

export function TriggerLock():Promise<void>;

export function UpdateAccount(arg1:models.AccountDecrypted):Promise<void>;

export function UpdateAccountGroup(arg1:string,arg2:string):Promise<void>;

export function UpdateAccountUsage(arg1:string):Promise<void>;

export function UpdateAppUsage():Promise<void>;

export function UpdateCustomPasswordRule(arg1:string,arg2:string,arg3:string,arg4:models.CustomRuleConfig):Promise<models.PasswordRule>;

export function UpdateGeneralPasswordRule(arg1:string,arg2:string,arg3:string,arg4:models.GeneralRuleConfig):Promise<models.PasswordRule>;

export function UpdateGroupSortOrder(arg1:string,arg2:number):Promise<void>;

export function UpdateType(arg1:models.Type):Promise<void>;

export function UpdateTypeSortOrder(arg1:string,arg2:number):Promise<void>;

export function UpdateUserActivity():Promise<void>;

export function VerifyOldPassword(arg1:string):Promise<void>;
